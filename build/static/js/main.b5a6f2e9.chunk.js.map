{"version":3,"sources":["components/AddContact.js","components/ContactsLi.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["AddContact","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","saveContact","resetForm","this","onSubmit","type","placeholder","onChange","Component","defaultProps","ContactsLi","remove","onClick","ContactList","contacts","removeContact","map","id","key","Filter","filter","handleFilter","App","contact","shortid","generate","checkedName","find","inputNumber","inputName","alert","concat","toLowerCase","includes","filterView","filterReturn","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5a6f2e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport default class AddContact extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {\r\n    saveContact: propTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.saveContact({ ...this.state });\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            number\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter number\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction ContactsLi({ name, number, remove }) {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={remove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactsLi.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  number: propTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactsLi;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ContactsLi from './ContactsLi';\r\n\r\nfunction ContactList({ contacts, removeContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsLi\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          remove={() => removeContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: propTypes.oneOfType([\r\n    propTypes.arrayOf(\r\n      propTypes.exact({\r\n        id: propTypes.string.isRequired,\r\n        name: propTypes.string.isRequired,\r\n        number: propTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    propTypes.array,\r\n  ]),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, handleFilter }) => (\r\n  <div>\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        value={filter}\r\n        name=\"filter\"\r\n        onChange={handleFilter}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: propTypes.string.isRequired,\r\n  handleFilter: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport AddContact from './AddContact';\r\nimport ContactList from './ContactList';\r\nimport Filter from './Filter';\r\n\r\nexport default class App extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  saveContact = ({ name, number }) => {\r\n    const contact = { name, number, id: shortid.generate() };\r\n    const { contacts } = this.state;\r\n    const checkedName = contacts.find(contact => name === contact.name);\r\n    const inputNumber = contacts.find(contact => number === '');\r\n    const inputName = contacts.find(contact => name === '');\r\n\r\n    if (checkedName) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    if (inputNumber || inputName) {\r\n      return alert(`field is empty`);\r\n    }\r\n\r\n    this.setState(state => ({ contacts: state.contacts.concat(contact) }));\r\n  };\r\n  handleFilter = event => {\r\n    this.setState({ filter: event.target.value });\r\n  };\r\n  filterReturn() {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  }\r\n  removeContact = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filterView = this.filterReturn();\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <AddContact saveContact={this.saveContact} />\r\n        <h2>Contact</h2>\r\n        {contacts.length >= 2 && (\r\n          <Filter filter={this.state.filter} handleFilter={this.handleFilter} />\r\n        )}\r\n\r\n        <ContactList contacts={filterView} removeContact={this.removeContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}